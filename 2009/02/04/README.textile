h4. Posted 2009-02-04

h1. "OpenId":http://openid.net/ Authentication Fork

**It's time to consider the future of authentication.** I recently read a "blog post":http://alexyoung.org/articles/show/68/what_hosted_blogging_should_look_like that I highly agree with. The point of the article was to try and inspire people to stop duplicating services. Although this was pointing at CMS's, the point was welcome in this house.

Taking the logic of not hosting what we don't need to host one thing is glaringly obvious; __Users__ . That's where I stand behind "OpenId":http://openid.net/. Users should have control over there identity and you as a service provider should not have to worry about if the password is hashed correctly, if hackers can brute force the system, or any other of the plethora of concerns that most application designers concern themselves with.

What about registrations, profiles, et cetera? Well it's actually so simple that I mocked this up in about 5 minutes of pseudo coding (yes my pseudo code does look like Ruby; I think in Ruby therefore ...):

<pre>
  <code>
    def authenticate
      open_id_user = try_login(params[:user][:openid_identifier])
      if open_id_user
        user = User.find(:first, :conditions => {:identity_url => params[:user][:openid_identity]})
        if user
          session[:user_id] = user.id
          redirect_to user_url(user.id)
        else 
          user = User.create(:identity_url => params[:user][:openid_identity])
          redirect_to user_profile_url(user.id)
        end
      else
        redirect_to users_open_id_signup_url
      end
    end
  </code>
</pre>

While this isn't clean it could be dropped in any controller or modified to be used in a model.

Essentially all you need to do is try to authenticate the "OpenId":http://openid.net/ identity url. If it authenticates look for an existing user with that identity url, otherwise send them to a splash page that explains "OpenId":http://openid.net/ and helps them choose a provider to sign up with. If you find a user create a session and redirect to the proper page, otherwise create the user and send them to a profile page that they can optionally fill out more info at their convenience.

Now the only hold back in my eyes is choosing an "OpenId":http://openid.net/ plugin, and figuring out how to use it. That brings about the point of my post. I'm forking the "open_id_authentication plugin":http://github.com/rails/open_id_authentication from the "rails repository":http://github.com/rail . I am going to go through and build the documentation for it so that others can pick this up easier. I hope that this can help others build for the future.

Lastly, all of my apps with be "OpenId":http://openid.net/ first (and possibly only). I may integrate Facebook and MySpace later, but for now "OpenId":http://openid.net/ is good enough for the 80% crowd.

h1. &nbsp;

h4. Posted by: "Michael Christenson II":http://workingwithrails.com/person/6829-michael-christenson-ii (aka m3talsmith)

<pre>
 site | http://blog.theurbanrebellion.com
 cell | +1(231)884-3024
email | michael@theurbanrebellion.com
</pre>
 
<a href="http://workingwithrails.com/recommendation/new/person/6829-michael-christenson-ii"><img alt="Recommend Me" src="http://workingwithrails.com/images/tools/compact-med.jpg" /></a>

<img src="http://profile.ak.facebook.com/v226/329/2/n536911325_2327.jpg" height="150px" width="200px" />